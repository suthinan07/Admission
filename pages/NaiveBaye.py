import streamlit as st
import numpy as np
import pandas as pd
from sklearn.naive_bayes import GaussianNB

# ‡πÇ‡∏´‡∏•‡∏î‡∏ä‡∏∏‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Admission
adm = pd.read_csv('./data/data1.csv')

# ‡∏™‡∏£‡πâ‡∏≤‡∏á target ‡πÉ‡∏´‡∏°‡πà (0=‡πÑ‡∏°‡πà Admit, 1=Admit) ‡∏à‡∏≤‡∏Å Chance of Admit
adm['AdmitClass'] = (adm['Chance of Admit '] >= 0.75).astype(int)

# ‡∏Å‡∏≥‡∏´‡∏ô‡∏î X, y
X = adm.drop(columns=['Serial No.', 'Chance of Admit ', 'AdmitClass'])
y = adm['AdmitClass']

# ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÅ‡∏•‡∏∞‡∏ù‡∏∂‡∏Å‡πÇ‡∏°‡πÄ‡∏î‡∏•
model = GaussianNB()
model.fit(X, y)

# ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏ß‡πá‡∏ö Streamlit
st.title("Na√Øve Bayes Classifier - ‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏ö‡πÄ‡∏Ç‡πâ‡∏≤‡∏®‡∏∂‡∏Å‡∏©‡∏≤")
st.write("‡∏õ‡πâ‡∏≠‡∏ô‡∏Ñ‡∏∏‡∏ì‡∏™‡∏°‡∏ö‡∏±‡∏ï‡∏¥‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢‡πÇ‡∏≠‡∏Å‡∏≤‡∏™‡∏Å‡∏≤‡∏£ Admit")

# ‡∏£‡∏±‡∏ö‡∏Ñ‡πà‡∏≤‡∏à‡∏≤‡∏Å‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
A1 = st.number_input("GRE Score", min_value=0)
A2 = st.number_input("TOEFL Score", min_value=0)
A3 = st.number_input("University Rating", min_value=0)
A4 = st.number_input("SOP", min_value=0.0, step=0.5)
A5 = st.number_input("LOR", min_value=0.0, step=0.5)
A6 = st.number_input("CGPA", min_value=0.0, step=0.01)
A7 = st.number_input("Research (0=No, 1=Yes)", min_value=0, max_value=1)

# ‡∏õ‡∏∏‡πà‡∏°‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢
if st.button("‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢‡∏ú‡∏•", key="predict_btn"):
    input_data = np.array([[A1, A2, A3, A4, A5, A6, A7]])
    prediction = model.predict(input_data)
    prediction_proba = model.predict_proba(input_data)

    # ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå
    st.subheader("‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ:")
    if prediction[0] == 1:
        st.success("üéâ ‡∏°‡∏µ‡πÇ‡∏≠‡∏Å‡∏≤‡∏™‡∏™‡∏π‡∏á‡∏ó‡∏µ‡πà‡∏à‡∏∞‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£ Admit")
    else:
        st.error("‚ùå ‡πÇ‡∏≠‡∏Å‡∏≤‡∏™‡∏ï‡πà‡∏≥‡∏ó‡∏µ‡πà‡∏à‡∏∞‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£ Admit")

    # ‡πÅ‡∏™‡∏î‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ô‡πà‡∏≤‡∏à‡∏∞‡πÄ‡∏õ‡πá‡∏ô‡∏Ç‡∏≠‡∏á‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó
    st.subheader("‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ô‡πà‡∏≤‡∏à‡∏∞‡πÄ‡∏õ‡πá‡∏ô‡∏Ç‡∏≠‡∏á‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó:")
    df_proba = pd.DataFrame(prediction_proba, columns=['Not Admit (0)','Admit (1)'])
    st.dataframe(df_proba.style.format("{:.2%}"))
